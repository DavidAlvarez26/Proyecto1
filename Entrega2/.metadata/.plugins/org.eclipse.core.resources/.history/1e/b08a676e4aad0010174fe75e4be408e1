package Finanzas;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import Usuarios.Organizador;
import logica.Evento;
import logica.Tiquete;

public class ReporteFinanciero {
	private double gananciasTotales;
	private Map<Evento,Double> gananciasxEvento;
	private Map<Organizador,Double> gananciasxOrganizador;
	
	
	public ReporteFinanciero(double gananciasTotales, Map<Evento, Double> gananciasxEvento,
			Map<Evento, Double> gananciasxOrganizador) {
		 this.gananciasTotales = 0;
	     this.gananciasxEvento = new HashMap<>();
	     this.gananciasxOrganizador = new HashMap<>();;
	    
	}
    public double getGananciasTotales() {
        return gananciasTotales;
    }

    public Map<Evento, Double> getGananciasxEvento() {
        return gananciasxEvento;
    }

    public Map<Organizador, Double> getGananciasxOrganizador() {
        return gananciasxOrganizador;
    }
    public double calcularGananciasTotales(List<Evento> eventos, List<Compra> compras) {
        double total = 0;

        for (Compra compra : compras) {
            total += compra.getValorTotal();
        }

        this.gananciasTotales = total;
        return total;
    }
    public double calcularGananciasPorEvento(Evento evento, List<Compra> compras) {
        double totalEvento = 0;

        for (Compra compra : compras) {
            if (compra.getTiquetesComprados() == null) continue; 

            for (Tiquete t : compra.getTiquetesComprados()) {
                if (t != null && t.getEvento() != null && t.getEvento().equals(evento)) {
                    totalEvento += t.calcularPrecioTotal();
                }
            }
        }

        gananciasxEvento.put(evento, totalEvento);
        return totalEvento;
    }
    public double calcularGananciasPorOrganizador(Organizador organizador, List<Compra> compras) {
        double totalOrg = 0;

        for (Compra compra : compras) {
            if (compra.getTiquetesComprados() == null) continue;

            for (Tiquete t : compra.getTiquetesComprados()) {
                if (t != null && t.getEvento() != null &&
                    t.getEvento().getOrganizador() != null &&
                    t.getEvento().getOrganizador().equals(organizador)) {
                    totalOrg += t.calcularPrecioTotal();
                }
            }
        }

        gananciasxOrganizador.put(organizador, totalOrg);
        return totalOrg;
    }
}
